package graphStreamVisualizer;

import graphStateAbstraction.Test;

import org.graphstream.graph.Graph;
import org.graphstream.graph.implementations.*;

import burlap.domain.singleagent.graphdefined.GraphDefinedDomain;
import burlap.oomdp.core.states.State;

public class GraphStreamVisualizer {
	private GraphDefinedDomain d;
	int numStates;

	public GraphStreamVisualizer(GraphDefinedDomain d, int numStates) {
		this.d = d;
		this.numStates = numStates;
	}

	public void render() {	
		Graph graph = new SingleGraph("Tutorial 1");	

		for (int stateIndex = 0; stateIndex < numStates; stateIndex++) {
			State currState = GraphDefinedDomain.getState(d, stateIndex);
			
			
		}

		GraphDefinedDomain.get
		for (State d.)
		
		graph.addNode("A");
		graph.addNode("B");
		graph.addNode("C");
		graph.addEdge("AB", "A", "B");
		graph.addEdge("BC", "B", "C");
		graph.addEdge("CA", "C", "A");	
		graph.display();
	}
	
	public static void main(String[] args) {
		int n = 5;
		GraphDefinedDomain dg = Test.getNStateChain(n);
		GraphStreamVisualizer test = new GraphStreamVisualizer(dg);
		test.render();
	}

}
